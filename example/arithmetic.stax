
string{"expected 1 + 2 = 3"}
int32{3, 2, 1} add assert

string{"expected 2 - 1 = 1"}
int32{1, 1, 2} sub assert

string{"expected 1 - 2 = -1"}
int32{-1, 2, 1} sub assert

string{"expected max_uint + 1 = 0"}
uint32{0, 1, max_uint} add assert

string{"expected 0 - 1 = max_uint"}
uint32{max_uint, 1, 0} sub assert

int32{2, 3} mul
emit

int32{6, 2} div
emit

int32{7, 2} mod
emit

uint32{1, 2} add
emit

uint32{2, 1} sub
emit

uint32{2, 3} mul
emit

uint32{6, 2} div
emit

uint32{7, 2} mod
emit

int64{1, 2} add
emit

int64{2, 1} sub
emit

int64{2, 3} mul
emit

int64{6, 2} div
emit

int64{7, 2} mod
emit

uint64{1, 2} add
emit

uint64{2, 1} sub
emit

uint64{2, 3} mul
emit

uint64{6, 2} div
emit

uint64{7, 2} mod
emit

float{1, 2} add
emit

float{2, 1} sub
emit

float{2, 3} mul
emit

float{6, 2} div
emit

double{1, 2} add
emit

double{2, 1} sub
emit

double{2, 3} mul
emit

double{6, 2} div
emit
